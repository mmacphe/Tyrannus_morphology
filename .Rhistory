morpho<-Tyrannus_voucher_table
### Standardize notation for Age column
morpho<-morpho[!morpho$Age=="",]
morpho$Age[morpho$Age=="SecondYear"]<-"Adult"
names(table(morpho$Age))
### Remove young birds and unknown age birds from analyses
morpho<-morpho[!(morpho$Age=="Nestling"),]
morpho<-morpho[!(morpho$Age=="Fledgling"),]
morpho<-morpho[!(morpho$Age=="HatchYear"),]
morpho<-morpho[!(morpho$Age=="Juvenile"),]
morpho<-morpho[!(morpho$Age=="Unknown"),]
names(table(morpho$Age))
table(morpho$Age)
table(morpho$Sex)
### remove individuals with unknown subspecies ID ### Note: This does not remove species that lack subspecies, only individuals that were not identified to the lowest taxonomic division
morpho<-morpho[-grep("unknown",morpho$subspecies),]
### Read in phylogeny
phy<-read.tree("Tyrannus_phylogeny.tre")
### Match morphometric data to names in phylogeny
morpho<-morpho[!morpho$Species=="",]
morpho$subspecies[is.na(morpho$subspecies)]<-""
morpho$subspecies<-trimws(morpho$subspecies) #removes leading/trailing whitespace
morpho$Species<-trimws(morpho$Species)
morpho$Species<-gsub(" ","_",paste(morpho$Species))
morpho$tip.label<-gsub(" ","_",paste(morpho$Species,morpho$subspecies,sep="_"))
morpho$tip.label[morpho$subspecies==""]<-morpho$Species[morpho$subspecies==""]
names(table(morpho$tip.label))
phy$tip.label[!phy$tip.label %in% morpho$tip.label] #Check that returns "character(0)"
### Save morpho as a .csv ###
write.csv(morpho, file="Tyrannus morphology data.csv")
### Split the morphology data sets up into categories by tip.label
morpho$tip.label
names(table(morpho$tip.label))
morpho_split<-split(morpho,morpho$tip.label)
names(morpho_split)<-gsub(" ","_",names(morpho_split))
names(morpho_split)
phy$tip.label[!phy$tip.label %in% names(morpho_split)]
names(morpho_split)[! names(morpho_split) %in% phy$tip.label]
### Create summary output df for data frame
morpho_trim<-lapply(morpho_split,function(x) x[colnames(x) %in% c("BL.Average","BW.Average","BD.Average", "Kipp.s.Average", "WC.Average", "Tail", "Tarsus.Average")])
### Get average values for each morphometric
otu_avg<-list()
otu_sd<-list()
otu_cv<-list()
otu_n<-list()
for(i in 1:length(morpho_trim)){
otu_avg[[i]]<-apply(morpho_trim[[i]],2,function(x) mean(na.omit(as.numeric(x))))
otu_sd[[i]]<-apply(morpho_trim[[i]],2,function(x) sd(na.omit(as.numeric(x))))
otu_cv[[i]]<-otu_sd[[i]]/otu_avg[[i]]
otu_n[[i]]<-apply(morpho_trim[[i]],2,function(x) length(which(!is.na(x))))
}
otu_avg_df<-do.call(rbind,otu_avg)
otu_sd_df<-do.call(rbind,otu_sd)
otu_cv_df<-do.call(rbind,otu_cv)
otu_n_df<-do.call(rbind,otu_n)
rownames(otu_avg_df)<-names(morpho_split)
### Write out .csv file with mean and SD for each OTU for table in manuscript
morphology_summary<-data.frame(matrix(paste(round(otu_avg_df,2)," ± ",round(otu_sd_df,2),"\n(",otu_n_df,")",sep=""),ncol=ncol(otu_avg_df)))
colnames(morphology_summary)<-colnames(otu_avg_df)
rownames(morphology_summary)<-names(morpho_split)
write.csv(morphology_summary,file="morphology_summary_table.csv")
### Write out .csv file just with the mean for each OTU to be used in further analyses
Tyrannus_OTU_averages<-data.frame(matrix(paste(round(otu_avg_df,2)),ncol=ncol(otu_avg_df)))
colnames(Tyrannus_OTU_averages)<-colnames(otu_avg_df)
rownames(Tyrannus_OTU_averages)<-names(morpho_split)
### Add migratory strategy as a column in the Tyrannus OTU averages .csv ###
migratory_data<-read.csv("Tyrannus_subspecies_MigrationStrategies.csv",row.names=1)
migratory_data[rownames(Tyrannus_OTU_averages),]
Tyrannus_data<-merge(Tyrannus_OTU_averages, migratory_data, by=0)
write.csv(Tyrannus_data, file="Tyrannus_data.csv")
### Write out .csv file with coefficient of variation for each OTU to be used in further analyses
cv_summary<-otu_cv_df
rownames(cv_summary)<-names(morpho_split)
cv_summary<-as.data.frame(cv_summary)
migratory_data[rownames(cv_summary),]
CV_data<-merge(cv_summary, migratory_data, by=0)
write.csv(CV_data, file = "cv_summary_table.csv")
rm(list=ls())
require(phytools)
require(RColorBrewer)
require(png)
### Set source directory to the folder this file came from within RStudio
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Read in average morphology data from .csv ###
morpho<-read.csv("Tyrannus_data.csv", row.names=2)
### Read in phylogeny
phy<-read.tree("Tyrannus_phylogeny.tre")
### Check that tree$tip.label is the same as morpho
phy$tip.label[!phy$tip.label %in% rownames(morpho)]
phy$tip.label
head(morpho)
names(table(row.names(morpho)))
rm(list=ls())
### Read in morphological data set
Tyrannus_voucher_table <- read.csv("Tyrannus_voucher_table.csv")
morpho<-Tyrannus_voucher_table
### Standardize notation for Age column
morpho<-morpho[!morpho$Age=="",]
morpho$Age[morpho$Age=="SecondYear"]<-"Adult"
names(table(morpho$Age))
### Remove young birds and unknown age birds from analyses
morpho<-morpho[!(morpho$Age=="Nestling"),]
morpho<-morpho[!(morpho$Age=="Fledgling"),]
morpho<-morpho[!(morpho$Age=="HatchYear"),]
morpho<-morpho[!(morpho$Age=="Juvenile"),]
morpho<-morpho[!(morpho$Age=="Unknown"),]
names(table(morpho$Age))
table(morpho$Age)
table(morpho$Sex)
### remove individuals with unknown subspecies ID ### Note: This does not remove species that lack subspecies, only individuals that were not identified to the lowest taxonomic division
morpho<-morpho[-grep("unknown",morpho$subspecies),]
### Read in phylogeny
phy<-read.tree("Tyrannus_phylogeny.tre")
### Match morphometric data to names in phylogeny
morpho<-morpho[!morpho$Species=="",]
morpho$subspecies[is.na(morpho$subspecies)]<-""
morpho$subspecies<-trimws(morpho$subspecies) #removes leading/trailing whitespace
morpho$Species<-trimws(morpho$Species)
morpho$Species<-gsub(" ","_",paste(morpho$Species))
morpho$tip.label<-gsub(" ","_",paste(morpho$Species,morpho$subspecies,sep="_"))
morpho$tip.label[morpho$subspecies==""]<-morpho$Species[morpho$subspecies==""]
names(table(morpho$tip.label))
phy$tip.label[!phy$tip.label %in% morpho$tip.label] #Check that returns "character(0)"
### Save morpho as a .csv ###
write.csv(morpho, file="Tyrannus morphology data.csv")
### Split the morphology data sets up into categories by tip.label
morpho$tip.label
names(table(morpho$tip.label))
morpho_split<-split(morpho,morpho$tip.label)
names(morpho_split)<-gsub(" ","_",names(morpho_split))
names(morpho_split)
phy$tip.label[!phy$tip.label %in% names(morpho_split)]
phy$tip.label
names(morpho_split)
phy$tip.label[!phy$tip.label %in% names(morpho_split)]
names(morpho_split)[! names(morpho_split) %in% phy$tip.label]
### Create summary output df for data frame
morpho_trim<-lapply(morpho_split,function(x) x[colnames(x) %in% c("BL.Average","BW.Average","BD.Average", "Kipp.s.Average", "WC.Average", "Tail", "Tarsus.Average")])
### Get average values for each morphometric
otu_avg<-list()
otu_sd<-list()
otu_cv<-list()
otu_n<-list()
for(i in 1:length(morpho_trim)){
otu_avg[[i]]<-apply(morpho_trim[[i]],2,function(x) mean(na.omit(as.numeric(x))))
otu_sd[[i]]<-apply(morpho_trim[[i]],2,function(x) sd(na.omit(as.numeric(x))))
otu_cv[[i]]<-otu_sd[[i]]/otu_avg[[i]]
otu_n[[i]]<-apply(morpho_trim[[i]],2,function(x) length(which(!is.na(x))))
}
otu_avg_df<-do.call(rbind,otu_avg)
otu_sd_df<-do.call(rbind,otu_sd)
otu_cv_df<-do.call(rbind,otu_cv)
otu_n_df<-do.call(rbind,otu_n)
rownames(otu_avg_df)<-names(morpho_split)
rownames(otu_avg_df)
### Write out .csv file with mean and SD for each OTU for table in manuscript
morphology_summary<-data.frame(matrix(paste(round(otu_avg_df,2)," ± ",round(otu_sd_df,2),"\n(",otu_n_df,")",sep=""),ncol=ncol(otu_avg_df)))
colnames(morphology_summary)<-colnames(otu_avg_df)
rownames(morphology_summary)<-names(morpho_split)
write.csv(morphology_summary,file="morphology_summary_table.csv")
### Write out .csv file just with the mean for each OTU to be used in further analyses
Tyrannus_OTU_averages<-data.frame(matrix(paste(round(otu_avg_df,2)),ncol=ncol(otu_avg_df)))
colnames(Tyrannus_OTU_averages)<-colnames(otu_avg_df)
rownames(Tyrannus_OTU_averages)<-names(morpho_split)
### Add migratory strategy as a column in the Tyrannus OTU averages .csv ###
migratory_data<-read.csv("Tyrannus_subspecies_MigrationStrategies.csv",row.names=1)
migratory_data
rm(list=ls())
### Read in morphological data set
Tyrannus_voucher_table <- read.csv("Tyrannus_voucher_table.csv")
morpho<-Tyrannus_voucher_table
### Standardize notation for Age column
morpho<-morpho[!morpho$Age=="",]
morpho$Age[morpho$Age=="SecondYear"]<-"Adult"
names(table(morpho$Age))
### Remove young birds and unknown age birds from analyses
morpho<-morpho[!(morpho$Age=="Nestling"),]
morpho<-morpho[!(morpho$Age=="Fledgling"),]
morpho<-morpho[!(morpho$Age=="HatchYear"),]
morpho<-morpho[!(morpho$Age=="Juvenile"),]
morpho<-morpho[!(morpho$Age=="Unknown"),]
names(table(morpho$Age))
table(morpho$Age)
table(morpho$Sex)
### remove individuals with unknown subspecies ID ### Note: This does not remove species that lack subspecies, only individuals that were not identified to the lowest taxonomic division
morpho<-morpho[-grep("unknown",morpho$subspecies),]
### Read in phylogeny
phy<-read.tree("Tyrannus_phylogeny.tre")
### Match morphometric data to names in phylogeny
morpho<-morpho[!morpho$Species=="",]
morpho$subspecies[is.na(morpho$subspecies)]<-""
morpho$subspecies<-trimws(morpho$subspecies) #removes leading/trailing whitespace
morpho$Species<-trimws(morpho$Species)
morpho$Species<-gsub(" ","_",paste(morpho$Species))
morpho$tip.label<-gsub(" ","_",paste(morpho$Species,morpho$subspecies,sep="_"))
morpho$tip.label[morpho$subspecies==""]<-morpho$Species[morpho$subspecies==""]
names(table(morpho$tip.label))
phy$tip.label[!phy$tip.label %in% morpho$tip.label] #Check that returns "character(0)"
### Save morpho as a .csv ###
write.csv(morpho, file="Tyrannus morphology data.csv")
### Split the morphology data sets up into categories by tip.label
morpho$tip.label
names(table(morpho$tip.label))
morpho_split<-split(morpho,morpho$tip.label)
names(morpho_split)<-gsub(" ","_",names(morpho_split))
names(morpho_split)
phy$tip.label[!phy$tip.label %in% names(morpho_split)]
names(morpho_split)[! names(morpho_split) %in% phy$tip.label]
### Create summary output df for data frame
morpho_trim<-lapply(morpho_split,function(x) x[colnames(x) %in% c("BL.Average","BW.Average","BD.Average", "Kipp.s.Average", "WC.Average", "Tail", "Tarsus.Average")])
### Get average values for each morphometric
otu_avg<-list()
otu_sd<-list()
otu_cv<-list()
otu_n<-list()
for(i in 1:length(morpho_trim)){
otu_avg[[i]]<-apply(morpho_trim[[i]],2,function(x) mean(na.omit(as.numeric(x))))
otu_sd[[i]]<-apply(morpho_trim[[i]],2,function(x) sd(na.omit(as.numeric(x))))
otu_cv[[i]]<-otu_sd[[i]]/otu_avg[[i]]
otu_n[[i]]<-apply(morpho_trim[[i]],2,function(x) length(which(!is.na(x))))
}
otu_avg_df<-do.call(rbind,otu_avg)
otu_sd_df<-do.call(rbind,otu_sd)
otu_cv_df<-do.call(rbind,otu_cv)
otu_n_df<-do.call(rbind,otu_n)
rownames(otu_avg_df)<-names(morpho_split)
### Write out .csv file with mean and SD for each OTU for table in manuscript
morphology_summary<-data.frame(matrix(paste(round(otu_avg_df,2)," ± ",round(otu_sd_df,2),"\n(",otu_n_df,")",sep=""),ncol=ncol(otu_avg_df)))
colnames(morphology_summary)<-colnames(otu_avg_df)
rownames(morphology_summary)<-names(morpho_split)
write.csv(morphology_summary,file="morphology_summary_table.csv")
### Write out .csv file just with the mean for each OTU to be used in further analyses
Tyrannus_OTU_averages<-data.frame(matrix(paste(round(otu_avg_df,2)),ncol=ncol(otu_avg_df)))
colnames(Tyrannus_OTU_averages)<-colnames(otu_avg_df)
rownames(Tyrannus_OTU_averages)<-names(morpho_split)
### Add migratory strategy as a column in the Tyrannus OTU averages .csv ###
migratory_data<-read.csv("Tyrannus_subspecies_MigrationStrategies.csv",row.names=1)
migratory_data[rownames(Tyrannus_OTU_averages),]
Tyrannus_data<-merge(Tyrannus_OTU_averages, migratory_data, by=0)
write.csv(Tyrannus_data, file="Tyrannus_data.csv")
### Write out .csv file with coefficient of variation for each OTU to be used in further analyses
cv_summary<-otu_cv_df
rownames(cv_summary)<-names(morpho_split)
cv_summary<-as.data.frame(cv_summary)
migratory_data[rownames(cv_summary),]
CV_data<-merge(cv_summary, migratory_data, by=0)
write.csv(CV_data, file = "cv_summary_table.csv")
rm(list=ls())
### Read in average morphology data from .csv ###
morpho<-read.csv("Tyrannus_data.csv", row.names=2)
### Read in phylogeny
phy<-read.tree("Tyrannus_phylogeny.tre")
### Check that tree$tip.label is the same as morpho
phy$tip.label[!phy$tip.label %in% rownames(morpho)]
rownames(morpho)
rm(list=ls())
### Read in morphological data set
Tyrannus_voucher_table <- read.csv("Tyrannus_voucher_table.csv")
morpho<-Tyrannus_voucher_table
### Standardize notation for Age column
morpho<-morpho[!morpho$Age=="",]
morpho$Age[morpho$Age=="SecondYear"]<-"Adult"
names(table(morpho$Age))
### Remove young birds and unknown age birds from analyses
morpho<-morpho[!(morpho$Age=="Nestling"),]
morpho<-morpho[!(morpho$Age=="Fledgling"),]
morpho<-morpho[!(morpho$Age=="HatchYear"),]
morpho<-morpho[!(morpho$Age=="Juvenile"),]
morpho<-morpho[!(morpho$Age=="Unknown"),]
names(table(morpho$Age))
table(morpho$Age)
table(morpho$Sex)
### remove individuals with unknown subspecies ID ### Note: This does not remove species that lack subspecies, only individuals that were not identified to the lowest taxonomic division
morpho<-morpho[-grep("unknown",morpho$subspecies),]
### Read in phylogeny
phy<-read.tree("Tyrannus_phylogeny.tre")
### Match morphometric data to names in phylogeny
morpho<-morpho[!morpho$Species=="",]
morpho$subspecies[is.na(morpho$subspecies)]<-""
morpho$subspecies<-trimws(morpho$subspecies) #removes leading/trailing whitespace
morpho$Species<-trimws(morpho$Species)
morpho$Species<-gsub(" ","_",paste(morpho$Species))
morpho$tip.label<-gsub(" ","_",paste(morpho$Species,morpho$subspecies,sep="_"))
morpho$tip.label[morpho$subspecies==""]<-morpho$Species[morpho$subspecies==""]
names(table(morpho$tip.label))
phy$tip.label[!phy$tip.label %in% morpho$tip.label] #Check that returns "character(0)"
### Save morpho as a .csv ###
write.csv(morpho, file="Tyrannus morphology data.csv")
### Split the morphology data sets up into categories by tip.label
morpho$tip.label
names(table(morpho$tip.label))
morpho_split<-split(morpho,morpho$tip.label)
names(morpho_split)<-gsub(" ","_",names(morpho_split))
names(morpho_split)
phy$tip.label[!phy$tip.label %in% names(morpho_split)]
names(morpho_split)[! names(morpho_split) %in% phy$tip.label]
### Create summary output df for data frame
morpho_trim<-lapply(morpho_split,function(x) x[colnames(x) %in% c("BL.Average","BW.Average","BD.Average", "Kipp.s.Average", "WC.Average", "Tail", "Tarsus.Average")])
### Get average values for each morphometric
otu_avg<-list()
otu_sd<-list()
otu_cv<-list()
otu_n<-list()
for(i in 1:length(morpho_trim)){
otu_avg[[i]]<-apply(morpho_trim[[i]],2,function(x) mean(na.omit(as.numeric(x))))
otu_sd[[i]]<-apply(morpho_trim[[i]],2,function(x) sd(na.omit(as.numeric(x))))
otu_cv[[i]]<-otu_sd[[i]]/otu_avg[[i]]
otu_n[[i]]<-apply(morpho_trim[[i]],2,function(x) length(which(!is.na(x))))
}
otu_avg_df<-do.call(rbind,otu_avg)
otu_sd_df<-do.call(rbind,otu_sd)
otu_cv_df<-do.call(rbind,otu_cv)
otu_n_df<-do.call(rbind,otu_n)
rownames(otu_avg_df)<-names(morpho_split)
table(names(rownames(otu_avg_df)))
names(morpho_split)
rownames(otu_avg_df)
### Write out .csv file with mean and SD for each OTU for table in manuscript
morphology_summary<-data.frame(matrix(paste(round(otu_avg_df,2)," ± ",round(otu_sd_df,2),"\n(",otu_n_df,")",sep=""),ncol=ncol(otu_avg_df)))
colnames(morphology_summary)<-colnames(otu_avg_df)
rownames(morphology_summary)<-names(morpho_split)
rownames(morphology_summary)
write.csv(morphology_summary,file="morphology_summary_table.csv")
### Write out .csv file just with the mean for each OTU to be used in further analyses
Tyrannus_OTU_averages<-data.frame(matrix(paste(round(otu_avg_df,2)),ncol=ncol(otu_avg_df)))
colnames(Tyrannus_OTU_averages)<-colnames(otu_avg_df)
rownames(Tyrannus_OTU_averages)<-names(morpho_split)
rownames(Tyrannus_OTU_averages)
### Add migratory strategy as a column in the Tyrannus OTU averages .csv ###
migratory_data<-read.csv("Tyrannus_subspecies_MigrationStrategies.csv",row.names=1)
rownames(migratory_data)
migratory_data[rownames(Tyrannus_OTU_averages),]
### Add migratory strategy as a column in the Tyrannus OTU averages .csv ###
migratory_data<-read.csv("Tyrannus_subspecies_MigrationStrategies.csv",row.names=1)
migratory_data[rownames(Tyrannus_OTU_averages),]
Tyrannus_data<-merge(Tyrannus_OTU_averages, migratory_data, by=0)
Tyrannus_data$Row.names
write.csv(Tyrannus_data, file="Tyrannus_data.csv")
### Write out .csv file with coefficient of variation for each OTU to be used in further analyses
cv_summary<-otu_cv_df
rownames(cv_summary)<-names(morpho_split)
cv_summary<-as.data.frame(cv_summary)
migratory_data[rownames(cv_summary),]
CV_data<-merge(cv_summary, migratory_data, by=0)
write.csv(CV_data, file = "cv_summary_table.csv")
rm(list=ls())
### Read in average morphology data from .csv ###
morpho<-read.csv("Tyrannus_data.csv", row.names=2)
### Read in phylogeny
phy<-read.tree("Tyrannus_phylogeny.tre")
### Check that tree$tip.label is the same as morpho
phy$tip.label[!phy$tip.label %in% rownames(morpho)]
### Bill Phylogenetic PCA ###
bill_pca<-phyl.pca(phy,morpho[,2:4],method="lambda")
bill_pca
### Bring in morphology data set for all individuals to add points onto figure
morpho_whole<-read.csv("Tyrannus morphology data.csv", row.names = 1)
### Match tip.labels with phylogeny tip.labels ###
morpho_whole$tip.label
names(table(morpho_whole$tip.label))
morpho_whole$tip.label<-gsub(" ","_",morpho_whole$tip.label)
names(table(morpho_whole$tip.label))
phy$tip.label
phy$tip.label[!phy$tip.label %in% morpho_whole$tip.label]
morpho_whole$tip.label[! morpho_whole$tip.label %in% phy$tip.label]
### Split the morphology data sets up into categories by tip.label
morpho_split<-split(morpho_whole,morpho_whole$tip.label)
names(morpho_split)
phy$tip.label
phy$tip.label[!phy$tip.label %in% names(morpho_split)]
names(morpho_split)[! names(morpho_split) %in% phy$tip.label]
morpho_trim<-lapply(morpho_split,function(x) x[colnames(x) %in% c("BL.Average","BW.Average","BD.Average", "Kipp.s.Average", "WC.Average", "Tail", "Tarsus.Average", "name_num")])
bill_mat<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim,function(x) x[,1:3])))),nrow=nrow(do.call(rbind,morpho_trim)))
bill_scores<-phytools:::scores(bill_pca,newdata=bill_mat)
rownames(bill_scores)<-rownames(do.call(rbind, lapply(morpho_trim,function(x) x[,1:3])))
bill_scores_df<-data.frame(bill_scores)
bill_scores_df$otu<-factor(sapply(strsplit(rownames(bill_scores_df),"[.]"),function(x) x[1]))
bill_scores_split<-split(bill_scores_df, bill_scores_df$otu)
bill_scores_avg<-t(sapply(bill_scores_split,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
bill_scores_avg<-as.data.frame(bill_scores_avg)
morpho$BillPC1<-bill_scores_avg$V1
morpho$BillPC2<-bill_scores_avg$V2
### Flight Feather Phylogenetic PCA ###
body_pca<-phyl.pca(phy,morpho[,6:8],method="lambda")
body_pca
body_mat<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim,function(x) x[,5:7])))),nrow=nrow(do.call(rbind,morpho_trim)))
body_scores<-phytools:::scores(body_pca,newdata=body_mat)
rownames(body_scores)<-rownames(do.call(rbind, lapply(morpho_trim,function(x) x[,5:7])))
body_scores_df<-data.frame(body_scores)
body_scores_df$otu<-factor(sapply(strsplit(rownames(body_scores_df),"[.]"),function(x) x[1]))
body_scores_split<-split(body_scores_df, body_scores_df$otu)
body_scores_avg<-t(sapply(body_scores_split,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
body_scores_avg<-as.data.frame(body_scores_avg)
morpho$BodyPC1<-body_scores_avg$V1
morpho$BodyPC2<-body_scores_avg$V2
### Body PCA without T. forficatus or T. savana bc their tails are so long ###
phy_trim<-drop.tip(phy,c(grep("forficatus",phy$tip.label),grep("savana",phy$tip.label)))
otu_avg_trim<-morpho[rownames(morpho) %in% phy_trim$tip.label,]
body_pca_trim<-phyl.pca(phy_trim,otu_avg_trim[,6:8],method="lambda")
body_pca_trim
body_mat_trim<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))],function(x) x[,5:7])))),nrow=nrow(do.call(rbind,morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))])))
body_scores_trim<-phytools:::scores(body_pca_trim,newdata=body_mat_trim)
rownames(body_scores_trim)<-rownames(do.call(rbind, lapply(morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))],function(x) x[,5:7])))
body_scores_trim_df<-data.frame(body_scores_trim)
body_scores_trim_df$otu<-factor(sapply(strsplit(rownames(body_scores_trim_df),"[.]"),function(x) x[1]))
body_scores_split_trim<-split(body_scores_trim_df, body_scores_trim_df$otu)
body_scores_trim_avg<-t(sapply(body_scores_split_trim,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
write.csv(morpho, file="Tyrannus morphology + PCA avg.csv")
### Bring in cv summary dataset
cv_summary<-read.csv("cv_summary_table.csv", row.names = 2)
### Coefficient of Variation (CV) Bill Phylogenetic PCA ###
CVbill_pca<-phyl.pca(phy,cv_summary[,2:4],method="lambda")
CVbill_pca
CVbill_mat<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim,function(x) x[,1:3])))),nrow=nrow(do.call(rbind,morpho_trim)))
CVbill_scores<-phytools:::scores(CVbill_pca,newdata=CVbill_mat)
rownames(CVbill_scores)<-rownames(do.call(rbind, lapply(morpho_trim,function(x) x[,1:3])))
CVbill_scores_df<-data.frame(CVbill_scores)
CVbill_scores_df$otu<-factor(sapply(strsplit(rownames(CVbill_scores_df),"[.]"),function(x) x[1]))
CVbill_scores_split<-split(CVbill_scores_df, CVbill_scores_df$otu)
CVbill_scores_cv<-t(sapply(CVbill_scores_split,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
CVbill_scores_cv<-as.data.frame(CVbill_scores_cv)
cv_summary$CVBillPC1<-CVbill_scores_cv$V1
cv_summary$CVBillPC2<-CVbill_scores_cv$V2
### CV Flight Feather Phylogenetic PCA ###
CVbody_pca<-phyl.pca(phy,cv_summary[,6:8],method="lambda")
CVbody_pca
CVbody_mat<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim,function(x) x[,5:7])))),nrow=nrow(do.call(rbind,morpho_trim)))
CVbody_scores<-phytools:::scores(CVbody_pca,newdata=CVbody_mat)
rownames(CVbody_scores)<-rownames(do.call(rbind, lapply(morpho_trim,function(x) x[,5:7])))
CVbody_scores_df<-data.frame(CVbody_scores)
CVbody_scores_df$otu<-factor(sapply(strsplit(rownames(CVbody_scores_df),"[.]"),function(x) x[1]))
CVbody_scores_split<-split(CVbody_scores_df, CVbody_scores_df$otu)
CVbody_scores_cv<-t(sapply(CVbody_scores_split,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
CVbody_scores_cv<-as.data.frame(CVbody_scores_cv)
cv_summary$CVBodyPC1<-CVbody_scores_cv$V1
cv_summary$CVBodyPC2<-CVbody_scores_cv$V2
write.csv(cv_summary, file="cv_summary.csv")
### CV Body PCA without T. forficatus or T. savana bc their tails are so long ###
phy_trim<-drop.tip(phy,c(grep("forficatus",phy$tip.label),grep("savana",phy$tip.label)))
otu_cv_trim<-cv_summary[rownames(cv_summary) %in% phy_trim$tip.label,]
CVbody_pca_trim<-phyl.pca(phy_trim,otu_cv_trim[,6:8],method="lambda")
CVbody_pca_trim
CVbody_mat_trim<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))],function(x) x[,5:7])))),nrow=nrow(do.call(rbind,morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))])))
CVbody_scores_trim<-phytools:::scores(CVbody_pca_trim,newdata=CVbody_mat_trim)
rownames(CVbody_scores_trim)<-rownames(do.call(rbind, lapply(morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))],function(x) x[,5:7])))
CVbody_scores_trim_df<-data.frame(CVbody_scores_trim)
CVbody_scores_trim_df$otu<-factor(sapply(strsplit(rownames(CVbody_scores_trim_df),"[.]"),function(x) x[1]))
CVbody_scores_split_trim<-split(CVbody_scores_trim_df, CVbody_scores_trim_df$otu)
CVbody_scores_trim_cv<-t(sapply(CVbody_scores_split_trim,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
### Build a figure to show PPCA results next to the phylogeny ###
## Set up color labels ##
coldf<-data.frame(row.names=sort(phy$tip.label),col=rep(NA,Ntip(phy)),pch=rep(NA,Ntip(phy)))
species<-unique(sapply(strsplit(rownames(coldf),"_"),function(x) paste(x[c(1,2)],collapse="_")))
ssp_count<-table(sapply(strsplit(rownames(coldf),"_"),function(x) paste(x[c(1,2)],collapse="_")))
sp_col1<-rainbow(n=(length(species)+2))[1:length(species)]
sp_col2<-c(brewer.pal(12,"Set3"),"#D2691E")
sp_col2[2]<-"#663399"
col_vec<-vector()
pch_vec<-vector()
for(i in 1:length(ssp_count)){
col_vec<-c(col_vec,rep(sp_col2[i],ssp_count[i]))
pch_vec <-c(pch_vec,c(21:25,21:22)[1:ssp_count[i]])
}
coldf$col<-col_vec
coldf$pch<-pch_vec
mig<-read.csv("Tyrannus_subspecies_MigrationStrategies.csv", row.names = 1)
coldf2<-merge(coldf, mig, by=0)
rownames(coldf)<-coldf$Row.names
coldf$Row.names<-NULL
coldf$Strategy<-factor(coldf$Strategy,levels=c("sedentary","partial","migratory")) #Convert to a factor
?lm()
citation(package="stats")
rm(list=ls())
require("phytools")
### Set source directory to the folder this file came from within RStudio
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### Bring in base phylogeny ###
tyrannus_base<-read.tree("MacPherson_Tyrannus_base.tre")
### make tree ultrametric ###
is.ultrametric(tyrannus_base)
tyrannus_um<-force.ultrametric(tyrannus_base,method="nnls")
#Rooted; includes branch lengths.
plot(tyrannus_um)
### read in list of missing taxa sensu clements 2019 ###
taxa2add<-readLines(file("Tyrannus_taxa2add.txt"))
taxa2add<-gsub(" ","_",taxa2add)
### Add in T. savana monachus tips based on Gomez-Bahamon phylogeny ###
taxa2add<- taxa2add[-10] #remove T. savana monachus as a single OTU because we are separating Central American and South American populations
taxa2add
tyrannus_mod <-bind.tip(tyrannus_um,tip.label="Tyrannus_savana_monachus_CA",where=which(tyrannus_um $tip.label=="Tyrannus_savana_savana"),position=1.4)
tyrannus_mod <-bind.tip(tyrannus_mod,tip.label="Tyrannus_savana_monachus_SA",where=which(tyrannus_mod $tip.label=="Tyrannus_savana_monachus_CA"),position=(3682/1e6))
plot(tyrannus_mod)
### Add missing tips to the phylogeny assuming a MRCA of 0.5 mya ###
for(i in 1:length(taxa2add)){
taxa2add[i]
binomial<-paste(strsplit(taxa2add[i],"_")[[1]][1:2],collapse="_")
recipient<-tyrannus_mod $tip.label[grep(binomial, tyrannus_mod $tip.label)]
if(length(recipient)>1){
recipient<-findMRCA(tyrannus_mod,recipient)
tyrannus_mod <-bind.tip(tyrannus_mod,taxa2add[i],where=recipient)
}else{
tyrannus_mod <-bind.tip(tyrannus_mod,taxa2add[i],where=which(tyrannus_mod $tip.label== recipient),position=0.5) #the position argument is what determines the terminal branch length for the added taxon in millions of years
}
}
plot(tyrannus_mod)
### Replace any 0-length branches with a very small value ###
tyrannus_mod$edge.length[tyrannus_mod$edge.length==0]<-0.001
plot(tyrannus_mod)
?write.tree()
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path/Output Files))
list(ls)
