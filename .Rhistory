morpho$BodyPC2<-body_scores_avg$V2
### Body PCA without T. forficatus or T. savana bc their tails are so long ###
phy_trim<-drop.tip(phy,c(grep("forficatus",phy$tip.label),grep("savana",phy$tip.label)))
otu_avg_trim<-morpho[rownames(morpho) %in% phy_trim$tip.label,]
body_pca_trim<-phyl.pca(phy_trim,otu_avg_trim[,6:8],method="lambda")
body_pca_trim
body_mat_trim<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))],function(x) x[,5:7])))),nrow=nrow(do.call(rbind,morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))])))
body_scores_trim<-phytools:::scores(body_pca_trim,newdata=body_mat_trim)
rownames(body_scores_trim)<-rownames(do.call(rbind, lapply(morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))],function(x) x[,5:7])))
body_scores_trim_df<-data.frame(body_scores_trim)
body_scores_trim_df$otu<-factor(sapply(strsplit(rownames(body_scores_trim_df),"[.]"),function(x) x[1]))
body_scores_split_trim<-split(body_scores_trim_df, body_scores_trim_df$otu)
body_scores_trim_avg<-t(sapply(body_scores_split_trim,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#write.csv(morpho, file="Tyrannus morphology + PCA avg_Females.csv")
#OR
write.csv(morpho, file="Tyrannus morphology + PCA avg_Males.csv")
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#cv_summary<-read.csv('./Output Files/cv_summary_table_Females.csv', row.names = 2)
#OR
cv_summary<-read.csv('./Output Files/cv_summary_table_Males.csv', row.names = 2)
### Coefficient of Variation (CV) Bill Phylogenetic PCA ###
CVbill_pca<-phyl.pca(phy,cv_summary[,2:4],method="lambda")
CVbill_pca
CVbill_mat<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim,function(x) x[,1:3])))),nrow=nrow(do.call(rbind,morpho_trim)))
CVbill_scores<-phytools:::scores(CVbill_pca,newdata=CVbill_mat)
rownames(CVbill_scores)<-rownames(do.call(rbind, lapply(morpho_trim,function(x) x[,1:3])))
CVbill_scores_df<-data.frame(CVbill_scores)
CVbill_scores_df$otu<-factor(sapply(strsplit(rownames(CVbill_scores_df),"[.]"),function(x) x[1]))
CVbill_scores_split<-split(CVbill_scores_df, CVbill_scores_df$otu)
CVbill_scores_cv<-t(sapply(CVbill_scores_split,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
CVbill_scores_cv<-as.data.frame(CVbill_scores_cv)
cv_summary$CVBillPC1<-CVbill_scores_cv$V1
cv_summary$CVBillPC2<-CVbill_scores_cv$V2
### CV Flight Feather Phylogenetic PCA ###
CVbody_pca<-phyl.pca(phy,cv_summary[,6:8],method="lambda")
CVbody_pca
CVbody_mat<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim,function(x) x[,5:7])))),nrow=nrow(do.call(rbind,morpho_trim)))
CVbody_scores<-phytools:::scores(CVbody_pca,newdata=CVbody_mat)
rownames(CVbody_scores)<-rownames(do.call(rbind, lapply(morpho_trim,function(x) x[,5:7])))
CVbody_scores_df<-data.frame(CVbody_scores)
CVbody_scores_df$otu<-factor(sapply(strsplit(rownames(CVbody_scores_df),"[.]"),function(x) x[1]))
CVbody_scores_split<-split(CVbody_scores_df, CVbody_scores_df$otu)
CVbody_scores_cv<-t(sapply(CVbody_scores_split,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
CVbody_scores_cv<-as.data.frame(CVbody_scores_cv)
cv_summary$CVBodyPC1<-CVbody_scores_cv$V1
cv_summary$CVBodyPC2<-CVbody_scores_cv$V2
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#write.csv(cv_summary, file="cv_summary_Females.csv")
#OR
write.csv(cv_summary, file="cv_summary_Males.csv")
### CV Body PCA without T. forficatus or T. savana bc their tails are so long ###
phy_trim<-drop.tip(phy,c(grep("forficatus",phy$tip.label),grep("savana",phy$tip.label)))
otu_cv_trim<-cv_summary[rownames(cv_summary) %in% phy_trim$tip.label,]
CVbody_pca_trim<-phyl.pca(phy_trim,otu_cv_trim[,6:8],method="lambda")
CVbody_pca_trim
CVbody_mat_trim<-matrix(as.numeric(as.matrix(do.call(rbind, lapply(morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))],function(x) x[,5:7])))),nrow=nrow(do.call(rbind,morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))])))
CVbody_scores_trim<-phytools:::scores(CVbody_pca_trim,newdata=CVbody_mat_trim)
rownames(CVbody_scores_trim)<-rownames(do.call(rbind, lapply(morpho_trim[-c(grep("forficatus",names(morpho_trim)),grep("savana",names(morpho_trim)))],function(x) x[,5:7])))
CVbody_scores_trim_df<-data.frame(CVbody_scores_trim)
CVbody_scores_trim_df$otu<-factor(sapply(strsplit(rownames(CVbody_scores_trim_df),"[.]"),function(x) x[1]))
CVbody_scores_split_trim<-split(CVbody_scores_trim_df, CVbody_scores_trim_df$otu)
CVbody_scores_trim_cv<-t(sapply(CVbody_scores_split_trim,function(x) c(mean(na.omit(x[,1])),mean(na.omit(x[,2])))))
### Build a figure to show PPCA results next to the phylogeny ###
## Set up color labels ##
coldf<-data.frame(row.names=sort(phy$tip.label),col=rep(NA,Ntip(phy)),pch=rep(NA,Ntip(phy)))
species<-unique(sapply(strsplit(rownames(coldf),"_"),function(x) paste(x[c(1,2)],collapse="_")))
ssp_count<-table(sapply(strsplit(rownames(coldf),"_"),function(x) paste(x[c(1,2)],collapse="_")))
sp_col1<-rainbow(n=(length(species)+2))[1:length(species)]
sp_col2<-c(brewer.pal(12,"Set3"),"#D2691E")
sp_col2[2]<-"#663399"
col_vec<-vector()
pch_vec<-vector()
for(i in 1:length(ssp_count)){
col_vec<-c(col_vec,rep(sp_col2[i],ssp_count[i]))
pch_vec <-c(pch_vec,c(21:25,21:22)[1:ssp_count[i]])
}
coldf$col<-col_vec
coldf$pch<-pch_vec
mig<-read.csv("Tyrannus_subspecies_MigrationStrategies.csv", row.names = 1)
coldf2<-merge(coldf, mig, by=0)
rownames(coldf)<-coldf2$Row.names
coldf$Row.names<-NULL
coldf$Strategy<-factor(coldf2$Strategy,levels=c("sedentary","partial","migratory")) #Convert to a factor
### Use outline to indicate migratory strategy, no outline = non migratory, dashed= partial, complete = migrant ###
coldf$outlinelwd<-c(0.5,1.5,2.5)[as.numeric(coldf$Strategy)]
coldf$outlinecolor<-c("gray70","gray40","black")[as.numeric(coldf$Strategy)]
### Fix pch 3 and 4 so they plot correctly on phylogeny ###
coldf$outlinecolor[coldf$pch %in% c(3,4)]<-coldf$col[coldf$pch %in% c(3,4)]
coldf$col[coldf$pch %in% c(3,4)]<-NA
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#png(file="Tyrannus_phylogenetic_PCA_Females.png",width=6.5,height=5.5,units="in",res=500)
#OR
png(file="Tyrannus_phylogenetic_PCA_Males.png",width=6.5,height=5.5,units="in",res=500)
layout(matrix(c(1,1,1,2,3,4),nrow=3),widths=c(2.25,1))
layout.show(n=4)
par(mar=c(2,0.5,0,14))
plot(phy,cex=0.8,show.tip.label=F)
par(xpd=NA)
format_tl<-phy$tip.label
format_tl<-gsub("_"," ",format_tl)
format_tl<-gsub("Tyrannus","T.",format_tl)
text(x=rep(5.2,Ntip(phy)),y=1:Ntip(phy),label=format_tl,adj=c(0,0.5),font=3)
points(x=rep(4.95,Ntip(phy)),y=1:Ntip(phy),cex=2,pch=coldf[phy$tip.label,]$pch,bg=coldf[phy$tip.label,]$col, col=coldf[phy$tip.label,]$outlinecolor,lwd=coldf[phy$tip.label,]$outlinelwd,lty=3)
### Time axis ###
axisPhylo(1)
text(x=5.1,y=-0.95,label="mya",cex=1,pch=22)
### Add legend ###
table(coldf$Strategy)#Counts for each migratory strategy, used in legend
points(x=rep(0.25,3),y=c(1,2,3),pch=21,bg="gray85",lwd=c(0.5,1.5,2.5),col=c("gray70","gray40","black"),cex=2)
text(x=rep(0.5,3),y=c(1,2,3),label=c("sedentary (15)","partial migrant (5)","migratory (8)"),adj=c(0,0.5))
### Add figure label ###
text(x=par("usr")[1]+diff(c(par("usr")[1],par("usr")[2]))*0.05,y=par("usr")[4]-diff(c(par("usr")[3],par("usr")[4]))*0.05,label=LETTERS[1],font=2,cex=1.5)
### PCA Panel plots ###
par(mar=c(2.75,2.75,1.5,1.5))
plot(bill_scores_df[,1],bill_scores_df[,2],bg=gsub("NA60",NA,paste0(coldf[bill_scores_df$otu,]$col,"60")),col= gsub("NA60","#663399",paste0(coldf[bill_scores_df$otu,]$col,"60")),pch= coldf[bill_scores_df$otu,]$pch,axes=F,xlab="",ylab="")
points(bill_scores_avg[,1], bill_scores_avg[,2],pch=coldf[rownames(bill_scores_avg),]$pch,bg= coldf[rownames(bill_scores_avg),]$col,col=coldf[rownames(bill_scores_avg),]$outlinecolor,cex=2,lwd=coldf$outlinelwd)
img1<-readPNG("T_savana.png")
img2<-readPNG("T_caudifasciatus.png")
img3<-readPNG("T_crassirostris.png")
img4<-readPNG("T_cubensis_BOW.png")
#specify the position of the image through bottom-left and top-right coords
rasterImage(img1,-7,-3.25,-2,-1.5)
rasterImage(img2, -3.5,1.75,0.5,3)
rasterImage(img3, 9,-3.5,13,-2)
rasterImage(img4, 10,1,15,2.5)
box()
title(main="Bill PPCA")
axis(1,mgp=c(0,0,0),tck=-0.025,cex.axis=0.45)
axis(2,mgp=c(0,0.2,0),tck=-0.025,cex.axis=0.45)
mtext(at=-2, text=paste0("short, narrow, shallow"), side=1, line=0.5, cex=0.45)
mtext(at=11, text=paste0("long, wide, deep"), side=1, line=0.5, cex=0.45)
mtext(at=1.75, text=paste0("long, narrow, shallow"), side=2, line=0.7, cex=0.45)
mtext(at=-2.75, text=paste0("short, wide, deep"), side=2, line=0.7, cex=0.45)
mtext(text=paste0("PC1 (",round(100*(diag(bill_pca$Eval)[1]/sum(diag(bill_pca$Eval))),2),"%)"),side=1,line=1.3,cex=0.55)
mtext(text=paste0("PC2 (",round(100*(diag(bill_pca$Eval)[2]/sum(diag(bill_pca$Eval))),2),"%)"),side=2,line=1.3,cex=0.55)
text(x=par("usr")[1]+diff(c(par("usr")[1],par("usr")[2]))*0.075,y=par("usr")[4]-diff(c(par("usr")[3],par("usr")[4]))*0.1,label=LETTERS[2],font=2,cex=1.5)
### Feather PPCA All data ###
plot(body_scores_df[,1],body_scores_df[,2],bg=gsub("NA60",NA,paste0(coldf[body_scores_df$otu,]$col,"60")),col= gsub("NA60","#663399",paste0(coldf[body_scores_df$otu,]$col,"60")),pch= coldf[body_scores_df$otu,]$pch,axes=F,xlab="",ylab="")
box()
title(main="Feather PPCA")
points(body_scores_avg[,1], body_scores_avg[,2],pch=coldf[rownames(body_scores_avg),]$pch,bg= coldf[rownames(body_scores_avg),]$col,col=coldf[rownames(body_scores_avg),]$outlinecolor,cex=2,lwd=coldf$outlinelwd)
axis(1,mgp=c(0,0.25,0),tck=-0.025,cex.axis=0.75)
axis(2,mgp=c(0,0.25,0),tck=-0.025,cex.axis=0.75)
mtext(text=paste0("PC1 (",round(100*(diag(body_pca$Eval)[1]/sum(diag(body_pca$Eval))),2),"%)"),side=1,line=1.3,cex=0.55)
mtext(text=paste0("PC2 (",round(100*(diag(body_pca$Eval)[2]/sum(diag(body_pca$Eval))),2),"%)"),side=2,line=1.3,cex=0.55)
## Figure panel label ###
text(x=par("usr")[1]+diff(c(par("usr")[1],par("usr")[2]))*0.075,y=par("usr")[4]-diff(c(par("usr")[3],par("usr")[4]))*0.1,label=LETTERS[3],font=2,cex=1.5)
### add rectangle to indicate zoom for panel D ###
range(na.omit(body_scores_df2[,1])) #Use these values to draw box in Feather PPCA plot 2 for zooming in
### Feather PPCA Zoomed in ###
body_scores_df2<-subset(body_scores_df, !(otu=="Tyrannus_forficatus"|otu=="Tyrannus_savana_circumdatus"|otu=="Tyrannus_savana_savana"|otu=="Tyrannus_savana_monachus_CA"|otu=="Tyrannus_savana_monachus_SA"|otu=="Tyrannus_savana_sanctaemartae"))
plot(body_scores_df2[,1],body_scores_df2[,2],bg=gsub("NA60",NA,paste0(coldf[body_scores_df2$otu,]$col,"60")),col= gsub("NA60","#663399",paste0(coldf[body_scores_df2$otu,]$col,"60")),pch= coldf[body_scores_df2$otu,]$pch,axes=F,xlab="",ylab="")
### add rectangle to indicate zoom for panel D ###
range(na.omit(body_scores_df2[,1])) #Use these values to draw box in Feather PPCA plot 2 for zooming in
range(na.omit(body_scores_df2[,2])) #Use these values to draw box in Feather PPCA plot 2 for zooming in
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#rect(xleft= 10.82210,ybottom=-30.90492,xright= 43.81162,ytop= 11.84217,lty=3) ### see range body scores avg 2 below to set these properly
#OR
rect(xleft= 28.43172,ybottom=-27.89040,xright= 64.27720,ytop= 19.31986,lty=3) ### see range body scores avg 2 below to set these properly
box()
title(main="Feather PPCA zoomed in")
body_scores_avg2<-body_scores_avg[-c(15,20,21,22,23,24),]
points(body_scores_avg2[,1], body_scores_avg2[,2],pch=coldf[rownames(body_scores_avg2),]$pch,bg= coldf[rownames(body_scores_avg2),]$col,col=coldf[rownames(body_scores_avg2),]$outlinecolor,cex=2,lwd=coldf[rownames(body_scores_avg2),]$outlinelwd)
rasterImage(img2, 55,3,61.5,13)
rasterImage(img3, 46.5,-30,53,-20)
axis(1,mgp=c(0,0,0),tck=-0.025,cex.axis=0.45)
axis(2,mgp=c(0,0.25,0),tck=-0.025,cex.axis=0.45)
mtext(at=27.5, text=paste0("long feathers"), side=1, line=0.5, cex=0.45)
mtext(at=57.5, text=paste0("short feathers"), side=1, line=0.5, cex=0.45)
mtext(at=-25, text=paste0("long feathers"), side=2, line=0.7, cex=0.45)
mtext(at=7.75, text=paste0("short feathers"), side=2, line=0.7, cex=0.45)
mtext(text=paste0("PC1 (",round(100*(diag(body_pca$Eval)[1]/sum(diag(body_pca$Eval))),2),"%)"),side=1,line=1.3,cex=0.55)
mtext(text=paste0("PC2 (",round(100*(diag(body_pca$Eval)[2]/sum(diag(body_pca$Eval))),2),"%)"),side=2,line=1.3,cex=0.55)
## Figure panel label ###
text(x=par("usr")[1]+diff(c(par("usr")[1],par("usr")[2]))*0.075,y=par("usr")[4]-diff(c(par("usr")[3],par("usr")[4]))*0.1,label=LETTERS[4],font=2,cex=1.5)
dev.off()
coldf<-data.frame(row.names=sort(phy$tip.label),col=rep(NA,Ntip(phy)),pch=rep(NA,Ntip(phy)))
species<-unique(sapply(strsplit(rownames(coldf),"_"),function(x) paste(x[c(1,2)],collapse="_")))
ssp_count<-table(sapply(strsplit(rownames(coldf),"_"),function(x) paste(x[c(1,2)],collapse="_")))
sp_col1<-rainbow(n=(length(species)+2))[1:length(species)]
sp_col2<-c(brewer.pal(12,"Set3"),"#D2691E")
sp_col2[2]<-"#663399"
col_vec<-vector()
pch_vec<-vector()
for(i in 1:length(ssp_count)){
col_vec<-c(col_vec,rep(sp_col2[i],ssp_count[i]))
pch_vec <-c(pch_vec,c(21:25,21:22)[1:ssp_count[i]])
}
coldf$col<-col_vec
coldf$pch<-pch_vec
mig<-read.csv("Tyrannus_subspecies_MigrationStrategies.csv", row.names = 1)
coldf2<-merge(coldf, mig, by=0)
rownames(coldf)<-coldf2$Row.names
coldf$Row.names<-NULL
coldf$Strategy<-factor(coldf2$Strategy,levels=c("sedentary","partial","migratory")) #Convert to a factor
### Use outline to indicate migratory strategy, no outline = non migratory, dashed= partial, complete = migrant ###
coldf$outlinelwd<-c(0.5,1.5,2.5)[as.numeric(coldf$Strategy)]
coldf$outlinecolor<-c("gray70","gray40","black")[as.numeric(coldf$Strategy)]
### Fix pch 3 and 4 so they plot correctly on phylogeny ###
coldf$outlinecolor[coldf$pch %in% c(3,4)]<-coldf$col[coldf$pch %in% c(3,4)]
coldf$col[coldf$pch %in% c(3,4)]<-NA
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#png(file="Tyrannus_phylogenetic_PCA_Females.png",width=6.5,height=5.5,units="in",res=500)
#OR
png(file="Tyrannus_phylogenetic_PCA_Males.png",width=6.5,height=5.5,units="in",res=500)
layout(matrix(c(1,1,1,2,3,4),nrow=3),widths=c(2.25,1))
layout.show(n=4)
par(mar=c(2,0.5,0,14))
plot(phy,cex=0.8,show.tip.label=F)
par(xpd=NA)
format_tl<-phy$tip.label
format_tl<-gsub("_"," ",format_tl)
format_tl<-gsub("Tyrannus","T.",format_tl)
text(x=rep(5.2,Ntip(phy)),y=1:Ntip(phy),label=format_tl,adj=c(0,0.5),font=3)
points(x=rep(4.95,Ntip(phy)),y=1:Ntip(phy),cex=2,pch=coldf[phy$tip.label,]$pch,bg=coldf[phy$tip.label,]$col, col=coldf[phy$tip.label,]$outlinecolor,lwd=coldf[phy$tip.label,]$outlinelwd,lty=3)
### Time axis ###
axisPhylo(1)
text(x=5.1,y=-0.95,label="mya",cex=1,pch=22)
### Add legend ###
table(coldf$Strategy)#Counts for each migratory strategy, used in legend
points(x=rep(0.25,3),y=c(1,2,3),pch=21,bg="gray85",lwd=c(0.5,1.5,2.5),col=c("gray70","gray40","black"),cex=2)
text(x=rep(0.5,3),y=c(1,2,3),label=c("sedentary (15)","partial migrant (5)","migratory (8)"),adj=c(0,0.5))
### Add figure label ###
text(x=par("usr")[1]+diff(c(par("usr")[1],par("usr")[2]))*0.05,y=par("usr")[4]-diff(c(par("usr")[3],par("usr")[4]))*0.05,label=LETTERS[1],font=2,cex=1.5)
### PCA Panel plots ###
par(mar=c(2.75,2.75,1.5,1.5))
plot(bill_scores_df[,1],bill_scores_df[,2],bg=gsub("NA60",NA,paste0(coldf[bill_scores_df$otu,]$col,"60")),col= gsub("NA60","#663399",paste0(coldf[bill_scores_df$otu,]$col,"60")),pch= coldf[bill_scores_df$otu,]$pch,axes=F,xlab="",ylab="")
points(bill_scores_avg[,1], bill_scores_avg[,2],pch=coldf[rownames(bill_scores_avg),]$pch,bg= coldf[rownames(bill_scores_avg),]$col,col=coldf[rownames(bill_scores_avg),]$outlinecolor,cex=2,lwd=coldf$outlinelwd)
img1<-readPNG("T_savana.png")
img2<-readPNG("T_caudifasciatus.png")
img3<-readPNG("T_crassirostris.png")
img4<-readPNG("T_cubensis_BOW.png")
#specify the position of the image through bottom-left and top-right coords
rasterImage(img1,-7,-3.25,-2,-1.5)
rasterImage(img2, -3.5,1.75,0.5,3)
rasterImage(img3, 9,-3.5,13,-2)
rasterImage(img4, 10,1,15,2.5)
box()
title(main="Bill PPCA")
axis(1,mgp=c(0,0,0),tck=-0.025,cex.axis=0.45)
axis(2,mgp=c(0,0.2,0),tck=-0.025,cex.axis=0.45)
mtext(at=-2, text=paste0("short, narrow, shallow"), side=1, line=0.5, cex=0.45)
mtext(at=11, text=paste0("long, wide, deep"), side=1, line=0.5, cex=0.45)
mtext(at=1.75, text=paste0("long, narrow, shallow"), side=2, line=0.7, cex=0.45)
mtext(at=-2.75, text=paste0("short, wide, deep"), side=2, line=0.7, cex=0.45)
mtext(text=paste0("PC1 (",round(100*(diag(bill_pca$Eval)[1]/sum(diag(bill_pca$Eval))),2),"%)"),side=1,line=1.3,cex=0.55)
mtext(text=paste0("PC2 (",round(100*(diag(bill_pca$Eval)[2]/sum(diag(bill_pca$Eval))),2),"%)"),side=2,line=1.3,cex=0.55)
text(x=par("usr")[1]+diff(c(par("usr")[1],par("usr")[2]))*0.075,y=par("usr")[4]-diff(c(par("usr")[3],par("usr")[4]))*0.1,label=LETTERS[2],font=2,cex=1.5)
### Feather PPCA All data ###
plot(body_scores_df[,1],body_scores_df[,2],bg=gsub("NA60",NA,paste0(coldf[body_scores_df$otu,]$col,"60")),col= gsub("NA60","#663399",paste0(coldf[body_scores_df$otu,]$col,"60")),pch= coldf[body_scores_df$otu,]$pch,axes=F,xlab="",ylab="")
### Feather PPCA Zoomed in ###
body_scores_df2<-subset(body_scores_df, !(otu=="Tyrannus_forficatus"|otu=="Tyrannus_savana_circumdatus"|otu=="Tyrannus_savana_savana"|otu=="Tyrannus_savana_monachus_CA"|otu=="Tyrannus_savana_monachus_SA"|otu=="Tyrannus_savana_sanctaemartae"))
### add rectangle to indicate zoom for panel D ###
range(na.omit(body_scores_df2[,1])) #Use these values to draw box in Feather PPCA plot 2 for zooming in
range(na.omit(body_scores_df2[,2])) #Use these values to draw box in Feather PPCA plot 2 for zooming in
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#rect(xleft= 10.82210,ybottom=-30.90492,xright= 43.81162,ytop= 11.84217,lty=3) ### see range body scores avg 2 below to set these properly
#OR
rect(xleft= 28.43172,ybottom=-27.89040,xright= 64.27720,ytop= 19.31986,lty=3) ### see range body scores avg 2 below to set these properly
box()
title(main="Feather PPCA")
points(body_scores_avg[,1], body_scores_avg[,2],pch=coldf[rownames(body_scores_avg),]$pch,bg= coldf[rownames(body_scores_avg),]$col,col=coldf[rownames(body_scores_avg),]$outlinecolor,cex=2,lwd=coldf$outlinelwd)
axis(1,mgp=c(0,0.25,0),tck=-0.025,cex.axis=0.75)
axis(2,mgp=c(0,0.25,0),tck=-0.025,cex.axis=0.75)
mtext(text=paste0("PC1 (",round(100*(diag(body_pca$Eval)[1]/sum(diag(body_pca$Eval))),2),"%)"),side=1,line=1.3,cex=0.55)
mtext(text=paste0("PC2 (",round(100*(diag(body_pca$Eval)[2]/sum(diag(body_pca$Eval))),2),"%)"),side=2,line=1.3,cex=0.55)
## Figure panel label ###
text(x=par("usr")[1]+diff(c(par("usr")[1],par("usr")[2]))*0.075,y=par("usr")[4]-diff(c(par("usr")[3],par("usr")[4]))*0.1,label=LETTERS[3],font=2,cex=1.5)
plot(body_scores_df2[,1],body_scores_df2[,2],bg=gsub("NA60",NA,paste0(coldf[body_scores_df2$otu,]$col,"60")),col= gsub("NA60","#663399",paste0(coldf[body_scores_df2$otu,]$col,"60")),pch= coldf[body_scores_df2$otu,]$pch,axes=F,xlab="",ylab="")
### add rectangle to indicate zoom for panel D ###
range(na.omit(body_scores_df2[,1])) #Use these values to draw box in Feather PPCA plot 2 for zooming in
box()
title(main="Feather PPCA zoomed in")
body_scores_avg2<-body_scores_avg[-c(15,20,21,22,23,24),]
points(body_scores_avg2[,1], body_scores_avg2[,2],pch=coldf[rownames(body_scores_avg2),]$pch,bg= coldf[rownames(body_scores_avg2),]$col,col=coldf[rownames(body_scores_avg2),]$outlinecolor,cex=2,lwd=coldf[rownames(body_scores_avg2),]$outlinelwd)
rasterImage(img2, 55,3,61.5,13)
rasterImage(img3, 46.5,-30,53,-20)
axis(1,mgp=c(0,0,0),tck=-0.025,cex.axis=0.45)
axis(2,mgp=c(0,0.25,0),tck=-0.025,cex.axis=0.45)
mtext(at=27.5, text=paste0("long feathers"), side=1, line=0.5, cex=0.45)
mtext(at=57.5, text=paste0("short feathers"), side=1, line=0.5, cex=0.45)
mtext(at=-25, text=paste0("long feathers"), side=2, line=0.7, cex=0.45)
mtext(at=7.75, text=paste0("short feathers"), side=2, line=0.7, cex=0.45)
mtext(text=paste0("PC1 (",round(100*(diag(body_pca$Eval)[1]/sum(diag(body_pca$Eval))),2),"%)"),side=1,line=1.3,cex=0.55)
mtext(text=paste0("PC2 (",round(100*(diag(body_pca$Eval)[2]/sum(diag(body_pca$Eval))),2),"%)"),side=2,line=1.3,cex=0.55)
## Figure panel label ###
text(x=par("usr")[1]+diff(c(par("usr")[1],par("usr")[2]))*0.075,y=par("usr")[4]-diff(c(par("usr")[3],par("usr")[4]))*0.1,label=LETTERS[4],font=2,cex=1.5)
dev.off()
rm(list=ls())
require(phytools)
### Set source directory to the folder this file came from within RStudio
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
phy<-read.tree('./Output Files/Tyrannus_phylogeny.tre')
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#otu_avg<-read.csv('./Output Files/Tyrannus morphology + PCA avg_Females.csv', row.names = 1)
#OR
otu_avg<-read.csv('./Output Files/Tyrannus morphology + PCA avg_Males.csv', row.names = 1)
species<-rownames(otu_avg)
otu_avg<-cbind(species,otu_avg)
View(otu_avg)
### Check that tree$tip.label is the same as otu_avg
phy$tip.label[!phy$tip.label %in% otu_avg$species]
### phylANOVA on OTU morphometric means while controlling for body size ###
response_var<-colnames(otu_avg)[c(3,4,5,7,8,9)]
### Set up predictor variable for phylANOVA ###
migration<-otu_avg$Strategy
names(migration)<-rownames(otu_avg)
### Set up tarsus for size correction #
otu_avg$Tarsus.Average <-as.numeric(otu_avg$Tarsus.Average)
tarsus.length<-otu_avg$Tarsus.Average
names(tarsus.length)<-rownames(otu_avg)
#Create empty list to store output of each for loop iteration
phyl.resid_output<-list()
phylANOVA_output<-list()
#Conduct the phylogenetic ANOVA he following code works without assuming y is the same order as tree$tip.label
for(i in 1:length(response_var)){
print(paste0("Character ",i," -- ",response_var[i]))#Report character
character_of_interest<-otu_avg[,response_var[i]] #Extract character of interest (coi)
names(character_of_interest)<-rownames(otu_avg) #Add names to vector of coi
phyl.resid_output[[i]]<-phyl.resid(phy,character_of_interest,tarsus.length,method="lambda") #Perform phylogenetic residuals
phylANOVA_output[[i]]<-phylANOVA(phy, migration, nsim=100000, phyl.resid_output[[i]]$resid[,1])
}
names(phyl.resid_output)<-response_var
names(phylANOVA_output)<-response_var
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#sink("phylANOVA_output_Females.txt")
#OR
sink("phylANOVA_output_Males.txt")
for(i in 1:length(phylANOVA_output)){
cat(paste0("Character ",i," -- ",response_var[i]))
cat("\n\n")
print(phylANOVA_output[[i]])
cat("#############")
cat("\n\n")
}
sink()
### Conduct the phylogenetic ANOVA for PC scores that are not size-corrected ###
phy$tip.label[!phy$tip.label %in% rownames(otu_avg)]
response_var2<-colnames(otu_avg)[c(11,12,13,14)]
phylANOVA_PCoutput<-list()
for(i in 1:length(response_var2)){
print(paste0("Character ",i," -- ",response_var2[i]))#Report character
character_of_interest<-otu_avg[,response_var2[i]] #Extract character of interest (coi)
names(character_of_interest)<-rownames(otu_avg) #Add names to vector of coi
phylANOVA_PCoutput[[i]]<-phylANOVA(tree=phy, x=migration, y=character_of_interest, nsim=100000)
}
names(phylANOVA_PCoutput)<-response_var2
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#sink("phylANOVA_output_PCscores_Females.txt")
#OR
sink("phylANOVA_output_PCscores_Males.txt")
for(i in 1:length(phylANOVA_PCoutput)){
cat(paste0("Character ",i," -- ",response_var2[i]))
cat("\n\n")
print(phylANOVA_PCoutput[[i]])
cat("#############")
cat("\n\n")
}
sink()
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#otu_cv_avg<-read.csv('./Output Files/cv_summary_Females.csv', row.names = 1)
#OR
otu_cv_avg<-read.csv('./Output Files/cv_summary_Males.csv', row.names = 1)
species<-rownames(otu_cv_avg)
otu_cv_avg<-cbind(species,otu_cv_avg)
View(otu_cv_avg)
### Check that tree$tip.label is the same as otu_avg
phy$tip.label[!phy$tip.label %in% otu_cv_avg$species]
response_var3<-colnames(otu_cv_avg)[c(3,4,5,6,7,8,9,11,12,13,14)]
### Set up predictor variable for phylANOVA ###
migration<-otu_cv_avg$Strategy
names(migration)<-rownames(otu_cv_avg)
#Create empty list to store output of each for loop iteration
phylANOVA_CVoutput<-list()
### Conduct the phylogenetic ANOVA on coefficients of variation ###
for(i in 1:length(response_var3)){
print(paste0("Character ",i," -- ",response_var3[i]))#Report character
character_of_interest<-otu_cv_avg[,response_var3[i]] #Extract character of interest (coi)
names(character_of_interest)<-rownames(otu_cv_avg) #Add names to vector of coi
phylANOVA_CVoutput[[i]]<-phylANOVA(phy, migration, y=character_of_interest, nsim=100000)
}
names(phylANOVA_CVoutput)<-response_var3
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#sink("phylANOVA_cv_output_Females.txt")
#OR
sink("phylANOVA_cv_output_Males.txt")
for(i in 1:length(phylANOVA_CVoutput)){
cat(paste0("Character ",i," -- ",response_var3[i]))
cat("\n\n")
print(phylANOVA_CVoutput[[i]])
cat("#############")
cat("\n\n")
}
sink()
View(phyl.resid_output
)
phyl_resid<-as.data.frame(phyl.resid_output$BL.Average,row.names = phy$tip.label)
phyl_resid$BL<-phyl_resid$resid
phyl_resid2<-as.data.frame(phyl.resid_output$BW.Average, row.names=phy$tip.label)
phyl_resid$BW<-phyl_resid2$resid
phyl_resid3<-as.data.frame(phyl.resid_output$BD.Average, row.names=phy$tip.label)
phyl_resid$BD<-phyl_resid3$resid
phyl_resid4<-as.data.frame(phyl.resid_output$Kipp.s.Average, row.names=phy$tip.label)
phyl_resid$KI<-phyl_resid4$resid
phyl_resid5<-as.data.frame(phyl.resid_output$WC.Average, row.names=phy$tip.label)
phyl_resid$WC<-phyl_resid5$resid
phyl_resid6<-as.data.frame(phyl.resid_output$Tail, row.names=phy$tip.label)
phyl_resid$TL<-phyl_resid6$resid
residuals<-merge(phyl_resid, migration, by=0, row.names=TRUE) #the taxonomic order can be checked visually by comparin residuals to phyl.resid_output$ coi
residuals$migration<-residuals$y
View(residuals)
#Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
#write.csv(residuals, "phylANOVA_tarsus-corrected_residuals_Females.csv")
### OR
write.csv(residuals, "phylANOVA_tarsus-corrected_residuals_Males.csv")
rm(list=ls())
require(phytools)
### Set source directory to the folder this file came from within RStudio
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
phy<-read.tree('./Output Files/Tyrannus_phylogeny.tre')
### Bring in morphology dataset with average morphology values for each OTU and PC scores
otu_avg<-read.csv('./Output Files/Tyrannus morphology + PCA avg.csv', row.names = 1)
species<-rownames(otu_avg)
otu_avg<-cbind(species,otu_avg)
View(otu_avg)
### Check that tree$tip.label is the same as otu_avg
phy$tip.label[!phy$tip.label %in% otu_avg$species]
### phylANOVA on OTU morphometric means while controlling for body size ###
response_var<-colnames(otu_avg)[c(3,4,5,7,8,9)]
### Set up predictor variable for phylANOVA ###
migration<-otu_avg$Strategy
names(migration)<-rownames(otu_avg)
### Set up tarsus for size correction #
otu_avg$Tarsus.Average <-as.numeric(otu_avg$Tarsus.Average)
tarsus.length<-otu_avg$Tarsus.Average
names(tarsus.length)<-rownames(otu_avg)
### Create empty list to store output of each for loop iteration
phyl.resid_output<-list()
phylANOVA_output<-list()
### Conduct the phylogenetic ANOVA he following code works without assuming y is the same order as tree$tip.label
for(i in 1:length(response_var)){
print(paste0("Character ",i," -- ",response_var[i]))#Report character
character_of_interest<-otu_avg[,response_var[i]] #Extract character of interest (coi)
names(character_of_interest)<-rownames(otu_avg) #Add names to vector of coi
phyl.resid_output[[i]]<-phyl.resid(phy,character_of_interest,tarsus.length,method="lambda") #Perform phylogenetic residuals
phylANOVA_output[[i]]<-phylANOVA(phy, migration, nsim=100000, phyl.resid_output[[i]]$resid[,1])
}
names(phyl.resid_output)<-response_var
names(phylANOVA_output)<-response_var
phyl_resid<-as.data.frame(phyl.resid_output$BL.Average,row.names = phy$tip.label)
phyl_resid$BL<-phyl_resid$resid
phyl_resid2<-as.data.frame(phyl.resid_output$BW.Average, row.names=phy$tip.label)
phyl_resid$BW<-phyl_resid2$resid
phyl_resid3<-as.data.frame(phyl.resid_output$BD.Average, row.names=phy$tip.label)
phyl_resid$BD<-phyl_resid3$resid
phyl_resid4<-as.data.frame(phyl.resid_output$Kipp.s.Average, row.names=phy$tip.label)
phyl_resid$KI<-phyl_resid4$resid
phyl_resid5<-as.data.frame(phyl.resid_output$WC.Average, row.names=phy$tip.label)
phyl_resid$WC<-phyl_resid5$resid
phyl_resid6<-as.data.frame(phyl.resid_output$Tail, row.names=phy$tip.label)
phyl_resid$TL<-phyl_resid6$resid
residuals<-merge(phyl_resid, migration, by=0, row.names=TRUE) #the taxonomic order can be checked visually by comparin residuals to phyl.resid_output$ coi
residuals$migration<-residuals$y
write.csv(residuals, "phylANOVA_tarsus-corrected_residuals.csv")
rm(list=ls())
phy<-read.tree('./Output Files/Tyrannus_phylogeny.tre')
### Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
otu_avg<-read.csv('./Output Files/Tyrannus morphology + PCA avg_Females.csv', row.names = 1)
species<-rownames(otu_avg)
otu_avg<-cbind(species,otu_avg)
### Check that tree$tip.label is the same as otu_avg
phy$tip.label[!phy$tip.label %in% otu_avg$species]
### phylANOVA on OTU morphometric means while controlling for body size ###
response_var<-colnames(otu_avg)[c(3,4,5,7,8,9)]
### Set up predictor variable for phylANOVA ###
migration<-otu_avg$Strategy
names(migration)<-rownames(otu_avg)
### Set up tarsus for size correction #
otu_avg$Tarsus.Average <-as.numeric(otu_avg$Tarsus.Average)
tarsus.length<-otu_avg$Tarsus.Average
names(tarsus.length)<-rownames(otu_avg)
### Create empty list to store output of each for loop iteration
phyl.resid_output<-list()
phylANOVA_output<-list()
### Conduct the phylogenetic ANOVA he following code works without assuming y is the same order as tree$tip.label
for(i in 1:length(response_var)){
print(paste0("Character ",i," -- ",response_var[i]))#Report character
character_of_interest<-otu_avg[,response_var[i]] #Extract character of interest (coi)
names(character_of_interest)<-rownames(otu_avg) #Add names to vector of coi
phyl.resid_output[[i]]<-phyl.resid(phy,character_of_interest,tarsus.length,method="lambda") #Perform phylogenetic residuals
phylANOVA_output[[i]]<-phylANOVA(phy, migration, nsim=100000, phyl.resid_output[[i]]$resid[,1])
}
names(phyl.resid_output)<-response_var
names(phylANOVA_output)<-response_var
phyl_resid<-as.data.frame(phyl.resid_output$BL.Average,row.names = phy$tip.label)
phyl_resid$BL<-phyl_resid$resid
phyl_resid2<-as.data.frame(phyl.resid_output$BW.Average, row.names=phy$tip.label)
phyl_resid$BW<-phyl_resid2$resid
phyl_resid3<-as.data.frame(phyl.resid_output$BD.Average, row.names=phy$tip.label)
phyl_resid$BD<-phyl_resid3$resid
phyl_resid4<-as.data.frame(phyl.resid_output$Kipp.s.Average, row.names=phy$tip.label)
phyl_resid$KI<-phyl_resid4$resid
phyl_resid5<-as.data.frame(phyl.resid_output$WC.Average, row.names=phy$tip.label)
phyl_resid$WC<-phyl_resid5$resid
phyl_resid6<-as.data.frame(phyl.resid_output$Tail, row.names=phy$tip.label)
phyl_resid$TL<-phyl_resid6$resid
residuals<-merge(phyl_resid, migration, by=0, row.names=TRUE) #the taxonomic order can be checked visually by comparin residuals to phyl.resid_output$ coi
residuals$migration<-residuals$y
View(otu_avg)
### Note: If assessing sexes separately, use one of the following lines of code instead of the above line, then proceed.
write.csv(residuals, "phylANOVA_tarsus-corrected_residuals_Females.csv")
